{
    "info": {
      "name": "Event Dashboard API",
      "description": "Authentication endpoints for Admin and Collaborator roles in the Event Management system.",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "name": "Authentication",
        "item": [
          {
            "name": "Login",
            "event": [
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "// Enhanced logging for login response",
                    "pm.test(\"Save and verify token\", function () {",
                    "    var jsonData = pm.response.json();",
                    "    console.log(\"=== Login Response Analysis ===\");",
                    "    console.log(\"Status:\", pm.response.status);",
                    "    console.log(\"Response headers:\", pm.response.headers.all());",
                    "    console.log(\"Full response:\", jsonData);",
                    "    ",
                    "    if (jsonData.session && jsonData.session.access_token) {",
                    "        // Save token and user data",
                    "        var token = jsonData.session.access_token;",
                    "        pm.environment.set(\"token\", token);",
                    "        ",
                    "        if (jsonData.user) {",
                    "            pm.environment.set(\"userId\", jsonData.user.id);",
                    "            pm.environment.set(\"userRole\", jsonData.user.role);",
                    "            pm.environment.set(\"userEmail\", jsonData.user.email);",
                    "        }",
                    "        ",
                    "        // Verification logs",
                    "        console.log(\"=== Token Verification ===\");",
                    "        console.log(\"Token saved:\", token.substring(0, 20) + '...');",
                    "        console.log(\"Token length:\", token.length);",
                    "        console.log(\"User ID:\", pm.environment.get(\"userId\"));",
                    "        console.log(\"User Role:\", pm.environment.get(\"userRole\"));",
                    "        console.log(\"User Email:\", pm.environment.get(\"userEmail\"));",
                    "    } else {",
                    "        console.error(\"=== Token Error ===\");",
                    "        console.error(\"No token found in response\");",
                    "        console.error(\"Response structure:\", Object.keys(jsonData));",
                    "    }",
                    "});"
                  ]
                }
              }
            ],
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/auth",
                "host": ["{{baseUrl}}"],
                "path": ["api", "auth"]
              },
              "body": {
                "mode": "raw",
                "raw": "{\n    \"username\": \"admin2@hexatech.com\",\n    \"password\": \"admin\"\n}"
              },
              "description": "Authenticates user (admin/collaborator) and returns session token"
            }
          },
          {
            "name": "Change Password",
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{token}}"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"currentPassword\": \"TEMP_PASSWORD\",\n    \"newPassword\": \"NEW_SECURE_PASSWORD\"\n}"
              },
              "url": {
                "raw": "{{baseUrl}}/api/auth/change-password",
                "host": ["{{baseUrl}}"],
                "path": ["api", "auth", "change-password"]
              }
            }
          },
          {
            "name": "Get Current User",
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{token}}"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/auth",
                "host": ["{{baseUrl}}"],
                "path": ["api", "auth"]
              },
              "description": "Gets current user information from token"
            }
          }
        ]
      },
      {
        "name": "User Management",
        "item": [
          {
            "name": "List Users (Admin Only)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "// Pre-request verification",
                    "console.log(\"=== Request Verification ===\");",
                    "console.log(\"Token:\", pm.environment.get(\"token\").substring(0, 20) + '...');",
                    "console.log(\"User Role:\", pm.environment.get(\"userRole\"));",
                    "console.log(\"Full Headers:\", pm.request.headers.all());"
                  ]
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "// Response verification",
                    "pm.test(\"Response Analysis\", function () {",
                    "    console.log(\"=== Response Analysis ===\");",
                    "    console.log(\"Status:\", pm.response.status);",
                    "    console.log(\"Response headers:\", pm.response.headers.all());",
                    "    ",
                    "    try {",
                    "        var jsonData = pm.response.json();",
                    "        console.log(\"Response body:\", jsonData);",
                    "    } catch (e) {",
                    "        console.error(\"Failed to parse response:\", e);",
                    "        console.log(\"Raw response:\", pm.response.text());",
                    "    }",
                    "});"
                  ]
                }
              }
            ],
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{token}}"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/users",
                "host": ["{{baseUrl}}"],
                "path": ["api", "users"]
              },
              "description": "Returns list of all users (requires admin token)"
            }
          },
          {
            "name": "Create Collaborator (Admin Only)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "// Pre-request verification",
                    "console.log(\"=== Request Verification ===\");",
                    "console.log(\"Token:\", pm.environment.get(\"token\").substring(0, 20) + '...');",
                    "console.log(\"User Role:\", pm.environment.get(\"userRole\"));",
                    "console.log(\"Full Headers:\", pm.request.headers.all());"
                  ]
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "// Response verification",
                    "pm.test(\"Response Analysis\", function () {",
                    "    console.log(\"=== Response Analysis ===\");",
                    "    console.log(\"Status:\", pm.response.status);",
                    "    console.log(\"Response headers:\", pm.response.headers.all());",
                    "    ",
                    "    try {",
                    "        var jsonData = pm.response.json();",
                    "        console.log(\"Response body:\", jsonData);",
                    "        ",
                    "        // Save collaborator data if successful",
                    "        if (pm.response.status === 201 && jsonData.user) {",
                    "            pm.environment.set(\"collaboratorId\", jsonData.user.id);",
                    "            pm.environment.set(\"collaboratorEmail\", jsonData.user.email);",
                    "            console.log(\"Saved collaborator data:\", {",
                    "                id: jsonData.user.id,",
                    "                email: jsonData.user.email",
                    "            });",
                    "        }",
                    "    } catch (e) {",
                    "        console.error(\"Failed to parse response:\", e);",
                    "        console.log(\"Raw response:\", pm.response.text());",
                    "    }",
                    "});"
                  ]
                }
              }
            ],
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{token}}"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/api/users/collaborator",
                "host": ["{{baseUrl}}"],
                "path": ["api", "users", "collaborator"]
              },
              "body": {
                "mode": "raw",
                "raw": "{\n    \"email\": \"collaborator2@hexatech.com\"\n}"
              },
              "description": "Creates a new collaborator account"
            }
          }
        ]
      }
    ],
    "variable": [
      {
        "key": "baseUrl",
        "value": "http://localhost:3000",
        "type": "string"
      }
    ]
  }